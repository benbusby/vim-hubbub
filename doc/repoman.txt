*repoman.txt*  Create and manage GitHub issues, PRs, reviews, etc in Vim

Author:   Ben Busby <https://benbusby.com>
Homepage: https://github.com/benbusby/vim-repoman
License:  Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.

==============================================================================
INTRODUCTION                                    *repoman*

Repoman is a plugin for creating and managing issues, pull requests, code
reviews, and more. "Managing" in this context can include commenting on,
reacting to, replying to, editing, closing, labeling, and so on. The intent
is to mirror the core functionality of GitHub in a Vim plugin.

==============================================================================
COMMANDS                                        *repoman-commands*

Nearly all commands are contextually dependent on whether or not a repo is
"active". In the plugin, a repo is seen as active if the current buffer has
been opened from within a GitHub repo, or if you have navigated into a repo
view from the repo list view.

NOTE: All commands are contingent on the prior execution of :RepoManInit,
which initializes the state of the plugin in order to query public and
private repos for an authenticated user.

                                                *:RepoManInit*
:RepoManInit            Initialize the plugin with a GitHub authentication
                        token and a password to encrypt the token. 

                        This command only needs to be run once, and will allow
                        for indefinite use of the plugin, provided the token
                        is valid.

                        The password for encryption is a safety feature to
                        avoid having sensitive plaintext information on your
                        device. If OpenSSL v1.1.1 or later is available, the
                        PBKDF2 algorithm is used for key derivation.

                                                *:RepoMan*
:RepoMan                Run the primary entrypoint command for Repoman and 
                        display the output. A password prompt will appear, but
                        will not be required for any other commands as long as
                        the plugin is open.

                        If this command _was_ run from within a Git
                        repository, the plugin will display the current list
                        of issues and pull requests for the repo.

                        If this command _was not_ run from within a Git
                        repository, the plugin will display the list of
                        repositories of which the authenticated user is a
                        member. From this view, pressing <Enter> on any item
                        in the list will generate a repository details view
                        identical to the one seen when running the command
                        from within a repository.

                                                *:RepoManBack*
:RepoManBack            Navigate back to a previous buffer view. This behaves
                        similarly to the "Back" button on a web browser. If
                        the window is split between an issue list and an
                        issue details view, :RepoManBack will close the issue
                        details view and refocus on the issue list.

                        Note: This is more conveniently accessed via the
                        <Backspace> key mapping. 

                                                *:RepoManComment*
:RepoManComment         Opens a new buffer to write a comment. The comment
                        contents can be submitted to GitHub/GitLab using
                        :RepoManPost, and will apply to the currently opened
                        issue. If an issue is not open, this command cannot be
                        used.

                                                *:RepoManLabel*
:RepoManLabel           Opens a new buffer to modify labels for a particular
                        issue/pull request/etc. The buffer is populated with a
                        list of available labels for the repo, as well as
                        indicators for which labels are active or inactive for
                        the current issue*. 

                        Selecting/deselecting a label can be done using the
                        <Enter> key on any particular label. As with any other
                        list type buffer in the repoman plugin, the labels can
                        quickly be navigated using J and K.

                        *Note: Current issue is determined using cursor
                        position. If your cursor is positioned over an issue
                        in the issues list buffer, or if it is located anywhere
                        within an issue details buffer, then this command will
                        apply to that issue. 

                                                *:RepoManNew*
:RepoManNew [type]      Opens a buffer for creating a new issue or pull
                        request. The buffer is prepopulated with editable
                        content to help create the new item (examples below).

                        Descriptions can be as long as needed, and line breaks
                        are supported. 

                        [type] can be: 
                            issue
                            pr

                        -- Examples --

                        :RepoManNew issue -->
                        1| Issue Title
                        2| --------------------
                        3| Issue Description

                        :RepoManNew pr -->
                        1| From: feature/vader-tests
                        2| Into: main
                        3|
                        4| Pull Request Title
                        5| --------------------
                        6| Pull Request Description

                                                *:RepoManClose*
:RepoManClose           Generates a prompt for closing the current issue*. You
                        must supply a "y" or "n" response to the prompt to
                        finish closing the issue.

                        *Note: Current issue is determined using cursor
                        position. If your cursor is positioned over an issue
                        in the issues list buffer, or if it is located anywhere
                        within an issue details buffer, then this command will
                        apply to that issue. 

                                                *:RepoManReact*
:RepoManReact [type]    Posts a reaction to an issue or comment, depending on
                        where the cursor is located. If the cursor is
                        positioned over a comment in an issue details view,
                        the reaction will apply to that comment. If the cursor
                        is anywhere else in an issue details view, the
                        reaction will apply to the issue.

                        [type] can be:
                            +1
                            -1
                            laugh
                            eyes
                            hooray
                            confused
                            heart
                            rocket

                        Reactions not in this list are rejected.

                                                *:RepoManEdit*
:RepoManEdit            Opens a buffer for editing the content depending on
                        the cursor location. If the cursor is positioned over
                        a comment, this will open a buffer for editing the
                        relevant comment. If the cursor is positioned in an
                        issue details buffer, or over an issue in an issue
                        list, then the buffer will allow editing issue
                        details.

                                                *:RepoManDelete*
:RepoManDelete          Deletes the comment positioned beneath the cursor in
                        an issue buffer.

                        This can be used for regular issue comments, as well
                        as review comments (both pending and finalized).

                                                *:RepoManReply*
:RepoManReply           Opens a buffer for replying to the review comment
                        positioned beneath the cursor.

                        This action only applies to review comments, as
                        regular comments do not have a parent->child
                        relationship. 

                                                *:RepoManSuggest*
:RepoManSuggest         Opens a buffer for making a suggestion in a PR review.

                        The buffer will contain the proper formatting for
                        making a valid suggestion, as well as the code from
                        the current cursor line (or range of lines). 

                        Example: The code below wrapped with a % has been
                        visually selected.

                        1|  def main():
                        2|% abc = 123 %
                        3|% def = 456 %

                        Running :RepoManSuggest on this selected block will
                        create the following suggestion buffer for editing.

                        1|```suggestion
                        2|  abc = 123
                        3|  def = 456
                        4|```

                        The suggestion can then be updated as needed, and
                        added to the current PR review using :RepoManPost.

                                                *:RepoManMerge*
:RepoManMerge {method}  Merges the current pull request / merge request using
                        the default merge method (merge commit), or using the
                        method specified. 

                        {method} can be:
                            merge
                            rebase
                            squash

                        Note: At this time, each of these methods use the
                        default commit message/description.

                                                *:RepoManReview*
:RepoManReview [state]  When [state] is "new", a new buffer is opened with the
                        latest diff contents for the pull request.

                        When [state] is any of the other supported state (see
                        below), the current review is submitted to GitHub in
                        the specified state.

                        [state] can be: 
                            new
                            approve
                            request_changes
                            comment
                            pending

                        The "request_changes" and "comment" states require a
                        comment from the user before submission.

                        Note: The "pending" action allows for submitting the
                        review to GitHub as a draft review, and can be
                        double-checked online before final submission if
                        desired.

==============================================================================
KEY MAPPINGS                                    *repoman-maps*

These key mappings are available in all buffers, but some will do nothing if
used out of context. For example, "J" and "K" are used for navigating between
issues/comments/etc, but will do nothing when in the "Create Issue" buffer.

<CR>                    In list view:
                            Open the item (issue/repo/etc) positioned under
                            the current cursor position.
                        In label view:
                            Select/deselect the label for the issue.

<BS>                    Similar to the "Back" button on a browser -- navigate
                        to the previous buffer. If the buffer is split to show
                        the details of an issue, hitting <Backspace> will
                        close the issue's buffer and refocus on the issue list
                        buffer.

<C-p>                   Shortcut for :RepoManPost (see |:RepoManPost|)

<C-e>                   Shortcut for :RepoManEdit (see |:RepoManEdit|)

gi                      Navigate back to the issues list (if in an issue
                        details view)

H                       Navigate to the prev page of issues/comments/repos

J                       Move cursor down to next issue/comment/label/repo

K                       Move cursor up to prev issue/comment/label/repo

L                       Navigate to the next page of issues/comments/repos

==============================================================================
HISTORY                                         *repoman-history*

1.0 (TBD 2021)
    - Initial release
==============================================================================
ABOUT                                           *repoman-about*

Repoman was written by Ben Busby and is released under the Vim license, see
|license|. It was very loosely inspired by the vim-rhubarb plugin by Tim Pope.

For the latest release, or to file a bug report, go to:

https://github.com/benbusby/vim-repoman

vim: tw=78 ts=8 sw=4 sts=4 et ft=help
